{"version":3,"sources":["components/Headerbar/Headerbar.tsx","Eloyeni.styles.tsx","state/Buildings.reducer.ts","components/Leftnav/Leftnav.styles.ts","components/Leftnav/Leftnav.tsx","components/LocationMap/LocationMap.styles.ts","components/LocationMap/LocationMap.tsx","components/BuildingInformation/BuildingInformation.styles.ts","components/BuildingInformation/BuildingInformation.tsx","utils/constants.ts","components/NavShell/NavShell.tsx","Eloyeni.tsx","index.tsx"],"names":["styles","createStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","Headerbar","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","Component","withStyles","Eloyeni_styles","container","style","height","width","$nest",".wrapper","display","nav","buildingsInit","selectedBuilding","buildings","buildingsReducer","state","action","type","Object","objectSpread","Error","Leftnav_styles","leftNavContainer","flexDirection","li","alignItems","navItem","header","index_es","component","Leftnav","props","Fragment","subheader","className","map","building","idx","bldArrIndex","findIndex","bld","id","key","selected","onClick","selectBuilding","name","LocationMap_styles","buildingId","_$nest","defineProperty","concat","fill","rgba","toString","stroke","strokeWidth","LocationMap","mapSrc","_props$buildingState","buildingState","react_svg","src","event","bldId","find","findBuidling","get","BuildingInformation_styles","buildingInfoContainer","margin","table","marginTop","marginBottom","BuildingInformation","cardBuilding","description","status","infestationLevel","gutterBottom","label","EXPIRES","ACCESS_KEY","BUCKET","NavShell","nvUrl","undefined","nvSig","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","auth","_props$auth","mapUrl","mapSig","navUrl","navSig","useEffect","axios","then","resp","data","Leftnav_Leftnav","Eloyeni","parsedQs","qs","parse","window","location","search","slice","this","setState","components_Headerbar_Headerbar","NavShell_NavShell","ReactDOM","render","src_Eloyeni","document","getElementById"],"mappings":"8SAMMA,EAASC,uBAAa,CAC1BC,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZE,WAAY,CACVC,YAAa,GACbC,YAAa,MAIXC,mLAEF,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,SAAS,SAASC,MAAM,WAC9BL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACED,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,QAAQ,KAAKH,MAAM,WAA/B,oBALcI,aAYTC,uBAAWnB,EAAXmB,CAAmBX,WCbnBY,EAAA,CACbC,UAjBgBC,YAAM,CACtBC,OAAQ,OACRC,MAAO,OACPC,MAAO,CACLC,WAAY,CACVF,MAAO,OACPG,QAAS,OACTF,MAAO,CACLG,IAAK,CACHJ,MAAO,gCCIV,SAASK,IACd,MAAO,CACLC,iBAAkB,KAClBC,UAAW,IAIR,SAASC,EAAiBC,EAAsBC,GACrD,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEH,iBAAkBI,EAAOJ,mBAE7B,IAAK,eACH,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEH,iBAAkBI,EAAOH,UAAU,GACnCA,UAAWG,EAAOH,YAEtB,IAAK,QACH,MApBG,CACLD,iBAAkB,KAClBC,UAAW,IAmBX,QACE,MAAM,IAAIO,OCpChB,IAiBeC,EAAA,CACbC,iBAlBuBlB,YACvB,CACEK,QAAS,OACTc,cAAe,SACfhB,MAAO,CACLiB,GAAM,CACJf,QAAS,OACTc,cAAe,SACfE,WAAY,eAWlBC,QALctB,YAAM,YCKhBuB,EAAuBpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAeC,UAAU,OAAzB,kBAoCdC,MAnCf,SAAiBC,GAqBf,OACExC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACEzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEC,UAAU,MACVI,UAAWN,EACXO,UAAWpD,EAAOwC,kBACjBS,EAAMlB,UAAUsB,IAzBA,SAACC,EAAoBC,GAC1C,IAAMC,EAAcP,EAAMnB,iBACxBmB,EAAMlB,UAAU0B,UAAU,SAAAC,GAAG,OAAIA,EAAIC,KAAOV,EAAMnB,iBAAkB6B,MAAO,EAE7E,OACElD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEc,IAAKL,EACLM,SAAUN,IAAQC,EAClBM,QAAS,kBAAMb,EAAMc,eAAe,CAClC5B,KAAM,iBACNL,iBAAkBwB,MAInBA,EAASU,8CCnBHC,EAhBO,SAACC,GAA8B,IAAAC,EACnD,OAAO7C,YAAM,CACXK,QAAS,OACTF,OAAK0C,EAAA,GAAA/B,OAAAgC,EAAA,EAAAhC,CAAA+B,EAAA,IAAAE,OACEH,GAAe,CAClBI,KAAMC,YAAK,IAAK,IAAK,IAAK,IAAKC,WAC/BC,OAAQ,YAHPrC,OAAAgC,EAAA,EAAAhC,CAAA+B,EAKH,IAAK,CACHO,YAAa,EACbJ,KAAM,cAPLH,wBCMMQ,EAAA,SAAC1B,GAA4B,IAClC2B,EAAW3B,EAAX2B,OADkCC,EAEF5B,EAAM6B,cAAtChD,EAFkC+C,EAElC/C,iBAAkBC,EAFgB8C,EAEhB9C,UAgBpB4B,EAAK7B,EAAmBA,EAAiB6B,GAAK,KAEpD,OACElD,EAAAC,EAAAC,cAAA,QAAMyC,UAAWpD,EAAqB2D,IACnCiB,EACCnE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,IAAKJ,EACLd,QAjBoB,SAACmB,GAC3B,IACMvB,EANa,SAACwB,GACpB,OAAOnD,EAAUoD,KAAK,SAAAzB,GAAG,OAAIA,EAAIC,KAAOuB,IAK5BE,CADEC,cAAIJ,EAAO,4BAErBvB,GACFT,EAAMc,eAAe,CACnB5B,KAAM,iBACNL,iBAAkB4B,OAahB,OCxBK4B,EAAA,CACbC,sBAd4BjE,YAAM,CAClCkE,OAAQ,MACRhE,MAAO,QACPD,OAAQ,QACRI,QAAS,OACTc,cAAe,WAUfgD,MAPYnE,YAAM,CAClBoE,UAAW,OACXC,aAAc,SCHDC,EAAA,SAAU3C,GAAiC,IAChDnB,EAAqBmB,EAArBnB,iBAWF+D,EAAe/D,GATW,CAC9B6B,GAAI,GACJK,KAAM,oBACN8B,YAAa,mDACbhF,MAAO,OACPiF,OAAQ,KACRC,iBAAkB,MAKpB,OACEvF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMM,UAAWpD,EAAOuF,uBACtB9E,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAYmD,cAAY,EAAChF,QAAQ,KAAK8B,UAAU,MAC7C8C,EAAa7B,MAEhBvD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAYC,UAAU,KACnB8C,EAAaC,eAIpBrF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAaM,UAAWpD,EAAOyF,OAC5BI,EAAaE,OACZtF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,eACArC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,4BAGJrC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KAAY+C,EAAaE,QACzBtF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KAAY+C,EAAaG,iBAAoBvF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMhC,MAAM,UAAUoF,MAAOL,EAAaG,mBAAwB,SAInH,QCnDCG,EAAU,WACVC,EAAa,uBACbC,EAAS,6BCyDPC,MA7Cf,SAAkBrD,GAChB,IAAI2B,EACA2B,OAA4BC,EAC5BC,OAA4BD,EAHME,EAIZC,qBAAW3E,OAAkBwE,EAAW3E,GAJ5B+E,EAAAxE,OAAAyE,EAAA,EAAAzE,CAAAsE,EAAA,GAI/BzE,EAJ+B2E,EAAA,GAIxBE,EAJwBF,EAAA,GAMtC,GAAI3D,EAAM8D,KAAM,KAAAC,EAEa/D,EAAM8D,KAAzBE,EAFMD,EAENC,OAAQC,EAFFF,EAEEE,OAChBX,EAAQtD,EAAM8D,KAAKI,OACnBV,EAAQxD,EAAM8D,KAAKK,OACnBxC,EAAM,WAAAP,OAAcgC,GAAdhC,OAAuB4C,EAAvB,oBAAA5C,OAAgD+B,EAAhD,eAAA/B,OAAwE6C,EAAxE,aAAA7C,OAA0F8B,GAelG,OAZAkB,oBAAU,WAEJpE,EAAM8D,MAAQR,GAASE,GACzBa,IAAMjC,IAAN,WAAAhB,OAAiCgC,GAAjChC,OAA0CkC,EAA1C,oBAAAlC,OAAkE+B,EAAlE,eAAA/B,OAA0FoC,EAA1F,aAAApC,OAA2G8B,IAAWoB,KAAK,SAACC,GAC1HV,EAAS,CACP3E,KAAM,eACNJ,UAAWyF,EAAKC,KAAK1F,eAI1B,CAAC0E,EAAOF,EAAOtD,EAAM8D,OAGtBtG,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACEzC,EAAAC,EAAAC,cAAC+G,EAAD,CACE3F,UAAWE,EAAMF,UACjBgC,eAAgB+C,EAChBhF,iBAAkBG,EAAMH,mBAE1BrB,EAAAC,EAAAC,cAACgE,EAAD,CACEZ,eAAgB+C,EAChBhC,cAAe7C,EACf2C,OAAQA,IAEVnE,EAAAC,EAAAC,cAACiF,EAAD,CACE9D,iBAAkBG,EAAMH,uCCZjB6F,8LAvBX,IAAMC,EAAWC,IAAGC,MAAMC,OAAOC,SAASC,OAAOC,MAAM,KACnDN,EAASX,QAAUW,EAAST,SAC9BgB,KAAKC,SAAS,CACZnB,OAAQW,EAASX,OACjBC,OAAQU,EAASV,OACjBC,OAAQS,EAAST,OACjBC,OAAQQ,EAASR,0CAMrB,OACE3G,EAAAC,EAAAC,cAAA,OAAKyC,UAAWpD,EAAOqB,WACrBZ,EAAAC,EAAAC,cAAC0H,EAAD,MACA5H,EAAAC,EAAAC,cAAA,OAAKyC,UAAW,WACd3C,EAAAC,EAAAC,cAAC2H,EAAD,CAAUvB,KAAMoB,KAAKlG,iBArBTf,aCRtBqH,IAASC,OAAO/H,EAAAC,EAAAC,cAAC8H,EAAD,MAAaC,SAASC,eAAe","file":"static/js/main.ae6b3658.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\n\nconst styles = createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n});\n\nclass Headerbar extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">Eloyeni</Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles)(Headerbar);\n","import { style } from \"typestyle\";\n\nconst container = style({\n  height: '100%',\n  width: '100%',\n  $nest: {\n    '.wrapper': {\n      width: '100%',\n      display: 'flex',\n      $nest: {\n        nav: {\n          width: '300px'\n        }\n      }\n    }\n  }\n});\n\nexport default {\n  container\n}\n","import { Color } from \"csstype\";\nimport { BasicItem } from \"../components/Leftnav/Leftnav\";\n\nexport interface Building extends BasicItem {\n  color: Color,\n  description: string,\n  status: 'Infested' | 'Pacified' | 'Online' | 'Unknown' | null,\n  infestationLevel: number | null\n}\n\nexport type BuildingState = {\n  selectedBuilding: Building | null;\n  buildings: Building[]\n}\n\nexport function buildingsInit(): BuildingState {\n  return {\n    selectedBuilding: null,\n    buildings: []\n  };\n}\n\nexport function buildingsReducer(state: BuildingState, action: any): BuildingState {\n  switch (action.type) {\n    case 'selectBuilding':\n      return {\n        ...state,\n        selectedBuilding: action.selectedBuilding\n      };\n    case 'setBuildings':\n      return {\n        ...state,\n        selectedBuilding: action.buildings[0],\n        buildings: action.buildings\n      };\n    case 'reset':\n      return buildingsInit();\n    default:\n      throw new Error();\n  }\n}\n","import { style } from \"typestyle\";\n\nconst leftNavContainer = style(\n  {\n    display: 'flex',\n    flexDirection: 'column',\n    $nest: {\n      'li': {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'baseline'\n      }\n    }\n  }\n);\n\nconst navItem = style({\n})\n\nexport default {\n  leftNavContainer,\n  navItem\n}\n","import React, { Dispatch } from 'react';\n\nimport styles from './Leftnav.styles'\nimport { List, ListSubheader, MenuItem } from '@material-ui/core';\nimport { Building } from '../../state/Buildings.reducer';\n\nexport interface BasicItem {\n  id: string;\n  name: string;\n}\n\nexport interface NavPayload {\n  buildings: Building[]\n}\n\nexport type LeftnavProps = {\n  selectBuilding: Dispatch<any>\n  selectedBuilding: Building | null;\n  buildings: Building[]\n};\n\nconst header: JSX.Element = (<ListSubheader component=\"div\">City Buildings</ListSubheader>);\nfunction Leftnav(props: LeftnavProps) {\n\n  const renderBuilding = (building: Building, idx: number): JSX.Element => {\n    const bldArrIndex = props.selectedBuilding ?\n      props.buildings.findIndex(bld => bld.id === props.selectedBuilding!.id) : -1;\n\n    return (\n      <MenuItem\n        key={idx}\n        selected={idx === bldArrIndex}\n        onClick={() => props.selectBuilding({\n          type: 'selectBuilding',\n          selectedBuilding: building\n        })}\n\n      >\n        {building.name}\n      </MenuItem >\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <List\n        component=\"nav\"\n        subheader={header}\n        className={styles.leftNavContainer}>\n        {props.buildings.map(renderBuilding)}\n      </List>\n    </React.Fragment>\n  );\n}\n\n\n\nexport default Leftnav;\n","import { style } from \"typestyle\";\nimport { rgba } from 'csx';\n\nconst mainContainer = (buildingId: string | null) => {\n  return style({\n    display: 'flex',\n    $nest: {\n      [`#${buildingId}`]: {\n        fill: rgba(255, 255, 255, 0.3).toString(),\n        stroke: '#d93381'\n      },\n      'g': {\n        strokeWidth: 3,\n        fill: '#00c4ff75',\n      }\n    }\n  })\n}\n\nexport default {\n  mainContainer\n}\n","import React, { Dispatch } from 'react';\nimport styles from './LocationMap.styles';\nimport ReactSVG from 'react-svg';\nimport { Building, BuildingState } from '../../state/Buildings.reducer';\nimport { get } from 'lodash';\n\ntype LocationMapProps = {\n  mapSrc: string | undefined,\n  selectBuilding: Dispatch<any>,\n  buildingState: BuildingState\n};\n\nexport default (props: LocationMapProps) => {\n  const { mapSrc } = props;\n  const { selectedBuilding, buildings } = props.buildingState;\n\n  const findBuidling = (bldId: string): Building | void => {\n    return buildings.find(bld => bld.id === bldId);\n  }\n\n  const handleClickBuilding = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const bldId = get(event, 'target.parentElement.id') as string;\n    const bld = findBuidling(bldId);\n    if (bld) {\n      props.selectBuilding({\n        type: 'selectBuilding',\n        selectedBuilding: bld\n      })\n    }\n  }\n  const id = selectedBuilding ? selectedBuilding.id : 'b1'\n\n  return (\n    <main className={styles.mainContainer(id)}>\n      {mapSrc ? (\n        <ReactSVG\n          src={mapSrc}\n          onClick={handleClickBuilding}\n        />\n      ) : null}\n    </main>\n  );\n}\n\n","import { style } from 'typestyle';\n\nconst buildingInfoContainer = style({\n  margin: '2em',\n  width: '400px',\n  height: '400px',\n  display: 'flex',\n  flexDirection: 'column'\n});\n\nconst table = style({\n  marginTop: 'auto',\n  marginBottom: '1em'\n})\n\nexport default {\n  buildingInfoContainer,\n  table\n}\n","import React from 'react';\nimport { Building } from './../../state/Buildings.reducer';\nimport { Card, CardActionArea, CardContent, Typography, CardActions, Table, TableHead, TableRow, TableCell, TableBody, Chip } from '@material-ui/core';\nimport styles from './BuildingInformation.styles';\n\ntype BuildingInformationProps = {\n  selectedBuilding: Building | null\n}\n\nexport default function (props: BuildingInformationProps) {\n  const { selectedBuilding } = props;\n\n  const dummyBuilding: Building = {\n    id: '',\n    name: 'Select a building',\n    description: 'Select a building in the nav panel or on the map',\n    color: '#fff',\n    status: null,\n    infestationLevel: null\n  };\n\n  const cardBuilding = selectedBuilding ? selectedBuilding : dummyBuilding;\n\n  return (\n    <Card className={styles.buildingInfoContainer}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {cardBuilding.name}\n          </Typography>\n          <Typography component=\"p\">\n            {cardBuilding.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions className={styles.table}>\n        {cardBuilding.status ? (\n          <Table>\n            <TableHead >\n              <TableRow>\n                <TableCell>Status</TableCell>\n                <TableCell>Infestation Level</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>{cardBuilding.status}</TableCell>\n                <TableCell>{cardBuilding.infestationLevel ? (<Chip color=\"primary\" label={cardBuilding.infestationLevel} />) : null}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        ) : null}\n      </CardActions>\n    </Card>\n  )\n}\n","export const EXPIRES = 1619131081;\nexport const ACCESS_KEY = 'AKIATDK53YFTSCKWJ7UY';\nexport const BUCKET = 'eloyeni2.s3.amazonaws.com/';\nexport const KEY_QUERY_PARAM = 'AWSAccessKeyId'\n","import React, { useReducer, useEffect } from 'react';\nimport { buildingsReducer } from '../../state/Buildings.reducer';\nimport { buildingsInit } from './../../state/Buildings.reducer';\nimport Leftnav, { NavPayload } from '../Leftnav/Leftnav';\nimport axios from 'axios';\nimport LocationMap from '../LocationMap/LocationMap';\nimport BuildingInformation from '../BuildingInformation/BuildingInformation';\nimport { EloyeniState } from 'Eloyeni';\nimport { BUCKET, EXPIRES, ACCESS_KEY } from 'utils/constants';\n\ntype NavShellProps = {\n  auth: EloyeniState | null\n}\n\nfunction NavShell(props: NavShellProps) {\n  let mapSrc: string | undefined;\n  let nvUrl: string | undefined = undefined;\n  let nvSig: string | undefined = undefined;\n  const [state, dispatch] = useReducer(buildingsReducer, undefined, buildingsInit);\n\n  if (props.auth) {\n    // build the mapSrc string\n    const { mapUrl, mapSig } = props.auth;\n    nvUrl = props.auth.navUrl;\n    nvSig = props.auth.navSig;\n    mapSrc = `https://${BUCKET}${mapUrl}?AWSAccessKeyId=${ACCESS_KEY}&Signature=${mapSig}&Expires=${EXPIRES}`\n  }\n\n  useEffect(() => {\n    // get the navigation json file\n    if (props.auth && nvUrl && nvSig) {\n      axios.get<NavPayload>(`https://${BUCKET}${nvUrl}?AWSAccessKeyId=${ACCESS_KEY}&Signature=${nvSig}&Expires=${EXPIRES}`).then((resp) => {\n        dispatch({\n          type: 'setBuildings',\n          buildings: resp.data.buildings\n        })\n      })\n    }\n  }, [nvSig, nvUrl, props.auth]);\n\n  return (\n    <React.Fragment>\n      <Leftnav\n        buildings={state.buildings}\n        selectBuilding={dispatch}\n        selectedBuilding={state.selectedBuilding}\n      />\n      <LocationMap\n        selectBuilding={dispatch}\n        buildingState={state}\n        mapSrc={mapSrc}\n      />\n      <BuildingInformation\n        selectedBuilding={state.selectedBuilding}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default NavShell;\n","import React, { Component } from 'react';\nimport Headerbar from './components/Headerbar/Headerbar';\nimport styles from './Eloyeni.styles';\nimport NavShell from './components/NavShell/NavShell';\nimport qs from 'querystring';\n\nexport type EloyeniState = {\n  mapUrl: string | undefined,\n  mapSig: string | undefined\n  navUrl: string | undefined,\n  navSig: string | undefined\n}\n\nclass Eloyeni extends Component<{}, EloyeniState> {\n\n  componentDidMount() {\n    // storing the auth in the query string\n    // comes with the ? at the beginning so take it off\n    const parsedQs = qs.parse(window.location.search.slice(1));\n    if (parsedQs.mapUrl || parsedQs.navUrl) {\n      this.setState({\n        mapUrl: parsedQs.mapUrl as string,\n        mapSig: parsedQs.mapSig as string,\n        navUrl: parsedQs.navUrl as string,\n        navSig: parsedQs.navSig as string\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <Headerbar />\n        <div className={'wrapper'}>\n          <NavShell auth={this.state} />\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default Eloyeni;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Eloyeni from './Eloyeni';\n\nReactDOM.render(<Eloyeni />, document.getElementById('root'));"],"sourceRoot":""}